@page "/game"
@using Microsoft.AspNetCore.Components

<div class="game-screen">
    <!-- Header with back button -->
    <div class="header">
        <button class="back-button">
            <i class="fas fa-arrow-left"></i>
        </button>
        <div class="title">ГРАВЦІ</div>
    </div>

    <!-- Players Row -->
    <div class="players-row @(isExpanded ? "hidden" : "")">
        <PlayerCard Name="ТИ" ImagePath="Hero1.png" Percentage="75" Type="PlayerType.Player1" IsTakingTurn="false" />
        <PlayerCard Name="ГРАВЕЦЬ 2" ImagePath="Hero2.png" Percentage="50" Type="PlayerType.Player2" IsTakingTurn="true" />
        <PlayerCard Name="ГРАВЕЦЬ 3" ImagePath="Hero3.png" Percentage="25" Type="PlayerType.Player3" IsTakingTurn="false" />
    </div>

    <!-- Game Board -->
    <div class="game-board">
        <div class="section-title">КАРТА</div>
        
        <div class="grid-container @(isExpanded ? "small-tiles" : "")">
            <GameTile Number="1" Title="УГОДА" Icon="fas fa-handshake" TileType="TileType.Blue" Size="@GetTileSize()" />
            <GameTile Number="12" Title="МИТТЄВІ ВИТРАТИ" Icon="fas fa-exclamation-triangle" TileType="TileType.Red" Size="@GetTileSize()" />
            <GameTile Number="11" Title="РИНОК" Icon="fas fa-shopping-cart" TileType="TileType.Yellow" Size="@GetTileSize()" />
            <GameTile Number="10" Title="МИТТЄВІ ВИТРАТИ" Icon="fas fa-exclamation-triangle" TileType="TileType.Red" Size="@GetTileSize()" />
            <GameTile Number="9" Title="ВИПЛАТА" Icon="fas fa-hand-holding-usd" TileType="TileType.Green" Size="@GetTileSize()" />
            
            <GameTile Number="2" Title="ВИПЛАТА" Icon="fas fa-hand-holding-usd" TileType="TileType.Green" Size="@GetTileSize()" />
            <GameTile Title="" Icon="@currentDiceIcon" TileType="TileType.Dice" Size="@GetDiceSize()" />
            <GameTile Number="8" Title="ЗВІЛЬНЕННЯ" Icon="fas fa-user-times" TileType="TileType.Orange" Size="@GetTileSize()" />
            
            <GameTile Number="3" Title="МИТТЄВІ ВИТРАТИ" Icon="fas fa-exclamation-triangle" TileType="TileType.Red" Size="@GetTileSize()" />
            <GameTile Number="4" Title="УГОДА" Icon="fas fa-handshake" TileType="TileType.Blue" Size="@GetTileSize()" />
            <GameTile Number="5" Title="РИНОК" Icon="fas fa-shopping-cart" TileType="TileType.Yellow" Size="@GetTileSize()" />
            <GameTile Number="6" Title="КРОВНИЙ БОРГ" Icon="fas fa-heart-broken" TileType="TileType.Purple" Size="@GetTileSize()" />
            <GameTile Number="7" Title="УГОДА" Icon="fas fa-handshake" TileType="TileType.Blue" Size="@GetTileSize()" />
        </div>
    </div>

    <!-- Action Buttons -->
    <div class="action-buttons">
        <button class="credit-button">
            <i class="fas fa-coins"></i> КРЕДИТ
        </button>
        <button class="turn-button" @onclick="RollDice" disabled="@isRolling">
            <i class="fas fa-dice"></i> ХІД
        </button>
    </div>

    <!-- Bottom Bar -->
    <div class="bottom-bar @(isExpanded ? "expanded" : "")">
        
        
        <!-- Collapsed View -->
        <div class="collapsed-content">
            <div class="savings">
                <div>SAVINGS:</div>
                <div class="amount">£@savings</div>
            </div>
            <button class="expand-button" @onclick="ToggleExpand" @onclick:stopPropagation="true">
                <i class="fas @(isExpanded ? "fa-chevron-down" : "fa-chevron-up")"></i>
            </button>
            <div class="cash-flow">
                <div>CASH FLOW:</div>
                <div class="amount">£@cashFlow</div>
            </div>
        </div>

        <!-- Expanded Content -->
        @if (isExpanded)
        {
            <div class="expanded-content scrollable">
                <!-- Надходження -->
                <div class="financial-section income">
                    <div class="section-header">НАДХОДЖЕННЯ</div>
                    <div class="financial-item">
                        <span>Зарплата Казначея</span>
                        <span class="amount">£950</span>
                    </div>
                    <div class="financial-item">
                        <span>Відсотки/Дивіденди</span>
                        <span class="amount"></span>
                    </div>
                    <div class="financial-item">
                        <span>Бар Бірмінгем</span>
                        <span class="amount">£100</span>
                    </div>
                </div>

                <!-- Витрати -->
                <div class="financial-section expenses">
                    <div class="section-header">ВИТРАТИ</div>
                    <div class="financial-item">
                        <span>Податки</span>
                        <span class="amount">£100</span>
                    </div>
                    <div class="financial-item">
                        <span>Іпотека</span>
                        <span class="amount">£200</span>
                    </div>
                </div>

                <!-- Активи -->
                <div class="financial-section assets">
                    <div class="section-header">АКТИВИ</div>
                    <div class="financial-item">
                        <span>Бар Бірмінгем</span>
                        <span class="amount">£15 000</span>
                    </div>
                    <div class="financial-item">
                        <span>Відсотки/Дивіденди</span>
                        <span class="amount">£0</span>
                    </div>
                </div>

                <!-- Пасиви -->
                <div class="financial-section liabilities">
                    <div class="section-header">ПАСИВИ</div>
                    <div class="financial-item">
                        <span>Кредит</span>
                        <span class="amount">£2 000</span>
                    </div>
                    <div class="financial-item">
                        <span>Іпотека</span>
                        <span class="amount">£20 000</span>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    [Inject] private NavigationManager Navigation { get; set; } = default!;

    // Game state
    private int savings = 1250;
    private int cashFlow = 250;
    private bool isExpanded = false;
    
    // Dice state
    private bool isRolling = false;
    private string currentDiceIcon = "fas fa-dice-one";
    private readonly string[] diceIcons = {
        "fas fa-dice-one",
        "fas fa-dice-two",
        "fas fa-dice-three",
        "fas fa-dice-four",
        "fas fa-dice-five",
        "fas fa-dice-six"
    };

    // Expand/Collapse functionality
    private void ToggleExpand()
    {
        isExpanded = !isExpanded;
    }

    // Tile size methods
    private TileSize GetTileSize()
    {
        return isExpanded ? TileSize.Small : TileSize.Normal;
    }

    private TileSize GetDiceSize()
    {
        var size = isExpanded ? TileSize.SmallDice : TileSize.NormalDice;
        Console.WriteLine($"GetDiceSize called - isExpanded: {isExpanded}, returning: {size}");
        return size;
    }

    // Dice rolling functionality
    private async Task RollDice()
    {
        if (isRolling) return;
        
        Console.WriteLine("Starting dice roll animation");
        isRolling = true;
        StateHasChanged();
        
        var random = new Random();
        var animationSteps = 15; // 15 steps for 1.5 seconds
        var stepDuration = 100; // 100ms per step
        
        // Animation loop - show random dice faces
        for (int i = 0; i < animationSteps; i++)
        {
            var randomDiceIndex = random.Next(0, 6);
            currentDiceIcon = diceIcons[randomDiceIndex];
            Console.WriteLine($"Animation step {i + 1}: showing {currentDiceIcon}");
            StateHasChanged();
            await Task.Delay(stepDuration);
        }
        
        // Final dice value
        var finalDiceIndex = random.Next(0, 6);
        currentDiceIcon = diceIcons[finalDiceIndex];
        isRolling = false;
        Console.WriteLine($"Dice roll finished: final result {currentDiceIcon}");
        StateHasChanged();
    }

    protected override void OnInitialized()
    {
        Console.WriteLine("GameScreen initialized");
        base.OnInitialized();
    }

    // Navigation methods
    private void NavigateBack()
    {
        Navigation.NavigateTo("/");
    }
}
