<div class="game-tile @GetTileClasses()" @onclick="HandleClick">
    @if (Number.HasValue)
    {
        <div class="tile-number">@Number</div>
    }
    @if (!string.IsNullOrEmpty(Icon))
    {
        <i class="@Icon"></i>
    }
    @if (!string.IsNullOrEmpty(Title))
    {
        <div class="tile-title">@Title</div>
    }
    
    <!-- Neeples on this tile -->
    @if (Neeples != null && Neeples.Any())
    {
        <div class="tile-neeples">
            @foreach (var neeple in Neeples)
            {
                <div class="neeple @GetNeepleClass(neeple.player) @(neeple.isSelected ? "selected" : "")">
                    <i class="fas fa-user"></i>
                </div>
            }
        </div>
    }
</div>

@code {
    [Parameter] public int? Number { get; set; }
    [Parameter] public string Title { get; set; } = string.Empty;
    [Parameter] public string Icon { get; set; } = string.Empty;
    [Parameter] public TileType TileType { get; set; } = TileType.Blue;
    [Parameter] public bool IsHighlighted { get; set; } = false;
    [Parameter] public TileSize Size { get; set; } = TileSize.Normal;
    [Parameter] public EventCallback OnClick { get; set; }
    [Parameter] public List<(PlayerType player, bool isSelected)>? Neeples { get; set; }

    protected override void OnInitialized()
    {
        Console.WriteLine($"GameTile initialized - TileType: {TileType}, Size: {Size}, Icon: {Icon}, Title: {Title}");
        base.OnInitialized();
    }

    private string GetTileClasses()
    {
        var classes = new List<string>();
        
        // Base tile type
        classes.Add(TileType.ToString().ToLower());
        
        // Size
        classes.Add(Size.ToString().ToLower());
        
        // Highlighted state
        if (IsHighlighted)
        {
            classes.Add("highlighted");
        }
        
        var result = string.Join(" ", classes);
        Console.WriteLine($"GameTile classes for {TileType}: {result}");
        return result;
    }
    
    private string GetNeepleClass(PlayerType playerType)
    {
        return playerType switch
        {
            PlayerType.Player1 => "player1",
            PlayerType.Player2 => "player2", 
            PlayerType.Player3 => "player3",
            _ => ""
        };
    }

    private async Task HandleClick()
    {
        if (OnClick.HasDelegate)
        {
            if (Number.HasValue)
            {
                await OnClick.InvokeAsync(Number);
            }
            else
            {
                await OnClick.InvokeAsync();
            }
        }
    }
}

<style>
    .game-tile {
        background-color: #2a2a2a;
        border-radius: 8px;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        text-align: center;
        color: white;
        font-weight: bold;
        position: relative;
        transition: all 0.3s ease;
        cursor: pointer;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
    }

    .game-tile:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.4);
    }

    /* Tile Types */
    .game-tile.blue {
        background-color: #3b82f6;
    }

    .game-tile.green {
        background-color: #22c55e;
    }

    .game-tile.red {
        background-color: #ef4444;
    }

    .game-tile.yellow {
        background-color: #eab308;
    }

    .game-tile.purple {
        background-color: #a855f7;
    }

    .game-tile.orange {
        background-color: #f97316;
    }
    

    /* Sizes */
    .game-tile.normal {
        height: 80px;
        font-size: 12px;
        padding: 8px;
    }

    .game-tile.small {
        height: 60px;
        font-size: 10px;
        padding: 6px;
    }

    .game-tile.normaldice {
        height: 120px;
        font-size: 24px;
        padding: 12px;
    }

    .game-tile.smalldice {
        height: 190px !important;
        font-size: 18px;
        padding: 8px;
    }

    /* Dice specific styling */
    .game-tile.dice {
        border: 2px solid #444;
        background-color: white;
        color: black;
        grid-row: span 3;
        position: relative;
        overflow: hidden;
    }

    .game-tile.dice.normaldice {
        height: 280px;
        font-size: 24px;
        padding: 12px;
    }

    .game-tile.dice.smalldice {
        height: 190px;
        font-size: 18px;
        padding: 8px;
    }

    .game-tile.dice i {
        font-size: 48px;
        transition: transform 0.1s ease-in-out;
    }

    .game-tile.dice.smalldice i {
        font-size: 36px;
    }



    /* Tile Number */
    .tile-number {
        position: absolute;
        top: 4px;
        left: 6px;
        font-size: 14px;
        font-weight: bold;
        background: rgba(0, 0, 0, 0.3);
        border-radius: 50%;
        width: 20px;
        height: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .game-tile.small .tile-number {
        font-size: 12px;
        width: 16px;
        height: 16px;
        top: 3px;
        left: 4px;
    }

    .game-tile.dice .tile-number {
        background: rgba(0, 0, 0, 0.8);
        color: white;
    }

    /* Tile Title */
    .tile-title {
        margin-top: 4px;
        line-height: 1.2;
        font-size: inherit;
    }

    .game-tile.small .tile-title {
        margin-top: 2px;
        font-size: 9px;
    }

    /* Icon */
    .game-tile i {
        font-size: 20px;
        margin-bottom: 4px;
    }

    .game-tile.small i {
        font-size: 16px;
        margin-bottom: 2px;
    }

    /* Highlighted state */
    .game-tile.highlighted {
        transform: scale(1.05);
        box-shadow: 0 0 20px rgba(255, 255, 255, 0.5);
        z-index: 10;
    }

    .game-tile.highlighted::after {
        content: '';
        position: absolute;
        top: -2px;
        left: -2px;
        right: -2px;
        bottom: -2px;
        border: 2px solid #fff;
        border-radius: 10px;
        animation: pulse 1.5s infinite;
    }

    /* Neeples on tiles */
    .tile-neeples {
        position: absolute;
        top: -8px;
        right: -8px;
        display: flex;
        flex-direction: row;
        gap: 2px;
        z-index: 20;
    }

    .neeple {
        width: 16px;
        height: 16px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 8px;
        border: 1px solid #fff;
        transition: all 0.3s ease;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
    }

    .neeple.player1 {
        background-color: #3b82f6;
        color: white;
    }

    .neeple.player2 {
        background-color: #22c55e;
        color: white;
    }

    .neeple.player3 {
        background-color: #ef4444;
        color: white;
    }

    .neeple.selected {
        transform: scale(1.2);
        box-shadow: 0 0 8px rgba(255, 255, 255, 0.8);
        animation: glow 1.5s infinite;
    }

    @@keyframes pulse {
        0% {
            opacity: 1;
        }
        50% {
            opacity: 0.5;
        }
        100% {
            opacity: 1;
        }
    }

    @@keyframes glow {
        0% {
            box-shadow: 0 0 8px rgba(255, 255, 255, 0.8);
        }
        50% {
            box-shadow: 0 0 12px rgba(255, 255, 255, 1);
        }
        100% {
            box-shadow: 0 0 8px rgba(255, 255, 255, 0.8);
        }
    }
</style>
